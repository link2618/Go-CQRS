version: '3.9'

services:
  db-postgresql:
    image: postgres:15.2-alpine3.17
    container_name: db_postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go-bd
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/var/lib/postgresql/data
    restart: always
  
  nats:
    image: "nats-streaming:0.9.2"
    container_name: cqrs_nats
    restart: always
  
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.2.3"
    container_name: cqrs_elasticsearch
    environment:
      - "discover.type=single-node"
  
  feed:
    build: "."
    container_name: cqrs_feed_service
    command: "feed-service"
    depends_on:
      - "postgres"
      - "nats"
    ports:
      - "8080"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      NATS_ADDRESS: "nats:4222"
  
  query:
    build: "."
    container_name: cqrs_query_service
    command: "query-service"
    depends_on:
      - "postgres"
      - "nats"
      - "elasticsearch"
    ports:
      - "8080"
    environment:
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "postgres"
        POSTGRES_DB: "postgres"
        NATS_ADDRESS: "nats:4222"
        ELASTICSEARCH_ADDRESS: "elasticsearch:9200"
  
  pusher:
    build: "."
    container_name: cqrs_pusher_service
    command: "pusher-service"
    depends_on:
      - "nats"
    ports:
      - "8080"
    environment:
      NATS_ADDRESS: "nats:4222"
  
  nginx:
    build: "./nginx"
    ports:
      - "8080:80"
    depends_on:
      - feed
      - query
      - pusher

# docker compose up -d